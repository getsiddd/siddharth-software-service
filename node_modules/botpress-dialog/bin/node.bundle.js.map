{"version":3,"sources":["webpack:///webpack/bootstrap af3eb6a92271df2bcfd9","webpack:///./src/index.js","webpack:///external \"util\"","webpack:///external \"path\"","webpack:///external \"fs\"","webpack:///external \"dialog-api/lib/messenger\""],"names":["dialog","configFile","saveConfig","config","writeFileSync","JSON","stringify","loadConfig","existsSync","accessToken","botId","overrides","process","env","DIALOG_TOKEN","Object","assign","parse","readFileSync","callback","logger","error","response","body","debug","message","code","inspect","incomingMiddleware","event","next","platform","payload","entry","messaging","raw","incoming","bp","verbose","outgoingMiddleware","message_id","__id","recipient_id","to","type","text","quick_replies","attachment","outgoing","outgoingAttachMiddleware","context","module","exports","init","configurator","join","projectLocation","botfile","modulesConfigDir","middlewares","register","name","handler","order","description","attach","track","link","ready","router","getRouter","get","req","res","send","post","apiToken","sendStatus"],"mappings":"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","file":"node.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap af3eb6a92271df2bcfd9","import util from 'util'\nimport path from 'path'\nimport fs from 'fs'\n\nimport Dialog from 'dialog-api/lib/messenger'\n\nlet dialog = null\nlet configFile = null\n\nconst saveConfig = (config) => {\n  fs.writeFileSync(configFile, JSON.stringify(config))\n}\n\nconst loadConfig = () => {\n  if (!fs.existsSync(configFile)) {\n    const config = { accessToken : '', botId: '' }\n    saveConfig(config, configFile)\n  }\n\n  const overrides = {}\n  if (process.env.DIALOG_TOKEN) overrides.accessToken = process.env.DIALOG_TOKEN\n\n  return Object.assign(JSON.parse(fs.readFileSync(configFile, 'utf-8')), overrides)\n}\n\nconst callback = (logger) => {\n  return (error, response, body) => {\n    if (error) {\n      logger.debug('[botpress-dialog] Error: ' + error.message)\n    } else if (body && body.error) {\n      logger.debug('[botpress-dialog] ' + body.code + ': ' + util.inspect(body.error, false, null))\n    }\n  }\n}\n\nconst incomingMiddleware = (event, next) => {\n  if (event.platform == 'facebook') {\n    let payload = {\n      entry: [\n        {\n          messaging: [event.raw]\n        }\n      ]\n    }\n\n    dialog.incoming(payload, callback(event.bp.logger))\n    event.bp.logger.verbose('[botpress-dialog] Incoming message')\n  }\n\n  next()\n}\n\nconst outgoingMiddleware = (event, next) => {\n  if (event.platform == 'facebook') {\n    // Rebuild response object expected by dialog-api\n    let response = {\n      message_id: event.__id, // Not the real Facebook message ID, but whatever\n      recipient_id: event.raw.to\n    }\n\n    // Rebuild payload object expected by dialog-api\n    let payload\n    if (event.type == 'text') {\n      payload = {\n        message: {\n          text: event.raw.message,\n          quick_replies: event.raw.quick_replies\n        }\n      }\n    } else if (event.type == 'template') {\n      payload = {\n        message: {\n          attachment: {\n            type: 'template',\n            payload: event.raw.payload\n          }\n        }\n      }\n    } else if (event.type == 'attachment') {\n      payload = {\n        message: {\n          attachment: {\n            type: event.raw.type,\n            payload: event.raw\n          }\n        }\n      }\n    } else {\n      // noop\n    }\n\n    if (payload) {\n      dialog.outgoing(payload, response, callback(event.bp.logger))\n      event.bp.logger.verbose('[botpress-dialog] Outgoing message')\n    }\n  }\n\n  next()\n}\n\nconst outgoingAttachMiddleware = (event, next) => {\n  event.dialog.context = dialog.context || {}\n\n  next()\n}\n\nmodule.exports = {\n  config: {\n    accessToken : { type: 'string', env: 'DIALOG_TOKEN' },\n    botId: { type: 'string' }\n  },\n\n  init: (bp, configurator) => {\n    configFile = path.join(bp.projectLocation, bp.botfile.modulesConfigDir, 'botpress-dialog.json')\n\n    bp.middlewares.register({\n      name: 'dialog.outgoing.attach',\n      module: 'botpress-dialog',\n      type: 'outgoing',\n      handler: outgoingAttachMiddleware,\n      order: 0,\n      description: 'Modifies the outgoing payload of Dialog Analytics'\n    })\n\n    bp.middlewares.register({\n      name: 'dialog.outgoing',\n      module: 'botpress-dialog',\n      type: 'outgoing',\n      handler: outgoingMiddleware,\n      order: 99, // Must be the last middleware to be called in order for dialog.attach() to work async\n      description: 'Tracks outgoing messages with Dialog Analytics'\n    })\n\n    bp.middlewares.register({\n      name: 'dialog.incoming',\n      module: 'botpress-dialog',\n      type: 'incoming',\n      handler: incomingMiddleware,\n      order: 0,\n      description: 'Tracks incoming messages with Dialog Analytics'\n    })\n\n    let config = loadConfig()\n\n    dialog = new Dialog(config.accessToken, config.botId)\n\n    // Expose dialog methods\n    bp.dialog = {\n      attach: dialog.attach,\n      track: dialog.track,\n      event: dialog.event,\n      link: dialog.link\n    }\n  },\n\n  ready: function(bp) {\n    const router = bp.getRouter('botpress-dialog')\n\n    router.get('/config', (req, res) => {\n      res.send(loadConfig())\n    })\n\n    router.post('/config', (req, res) => {\n      const { accessToken, botId } = req.body\n\n      saveConfig({ accessToken, botId })\n\n      dialog.apiToken = accessToken\n      dialog.botId = botId\n\n      res.sendStatus(200)\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"dialog-api/lib/messenger\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dialog-api/lib/messenger\"\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}